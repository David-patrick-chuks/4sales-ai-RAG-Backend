---
description:
globs:
alwaysApply: false
---
# Development Setup Guide

## Environment Configuration
**File**: [.env](mdc:.env)

Required environment variables:
```
PORT=3000
MONGO_URI=your_mongodb_atlas_connection_string
GEMINI_API_KEY=your_google_gemini_api_key
```

## MongoDB Atlas Setup
1. Create a MongoDB Atlas cluster
2. Get your connection string and add to `.env`
3. Create a vector index named `vector_index` on the `embedding` field:
   - Go to Collections → Search Indexes
   - Create Search Index → Vector Search
   - Field: `embedding`
   - Dimensions: 768 (or match your embedding size)
   - Similarity: `cosine`

## Dependencies Installation
```bash
npm install
```

## Development Commands
- `npm run dev` - Start development server with ts-node
- `npm run build` - Compile TypeScript to JavaScript
- `npm start` - Run production server

## TypeScript Configuration
**File**: [tsconfig.json](mdc:tsconfig.json)
- ES modules enabled
- Strict type checking
- Source maps for debugging
- Output to `dist/` directory

## Key Dependencies
- **Express**: Web framework
- **Mongoose**: MongoDB ODM
- **@google/generative-ai**: Gemini API client
- **ts-node**: TypeScript execution
- **dotenv**: Environment variable loading

## File Extensions
- Use `.js` extensions in imports for ES module compatibility
- Source files are `.ts`
- Compiled output is `.js` in `dist/` directory
